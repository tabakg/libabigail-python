// pyabispack_abispackmodule.cpp
// This file is generated by Shroud 0.12.2. Do not edit.
#include "pyabispackmodule.hpp"

// splicer begin namespace.abispack.include
// splicer end namespace.abispack.include

#ifdef __cplusplus
#define SHROUD_UNUSED(param)
#else
#define SHROUD_UNUSED(param) param
#endif

#if PY_MAJOR_VERSION >= 3
#define PyInt_AsLong PyLong_AsLong
#define PyInt_FromLong PyLong_FromLong
#define PyInt_FromSize_t PyLong_FromSize_t
#define PyString_FromString PyUnicode_FromString
#define PyString_FromStringAndSize PyUnicode_FromStringAndSize
#endif

// splicer begin namespace.abispack.C_definition
// splicer end namespace.abispack.C_definition
// splicer begin namespace.abispack.additional_functions
// splicer end namespace.abispack.additional_functions
static PyMethodDef PY_methods[] = {
{nullptr,   (PyCFunction)nullptr, 0, nullptr}            /* sentinel */
};

#if PY_MAJOR_VERSION >= 3
static char PY__doc__[] =
"XXX submodule doc"  //"library documentation"
;

struct module_state {
    PyObject *error;
};

static struct PyModuleDef moduledef = {
    PyModuleDef_HEAD_INIT,
    "abispack.abispack", /* m_name */
    PY__doc__, /* m_doc */
    sizeof(struct module_state), /* m_size */
    PY_methods, /* m_methods */
    nullptr, /* m_reload */
//    abispack_traverse, /* m_traverse */
//    abispack_clear, /* m_clear */
    nullptr, /* m_traverse */
    nullptr, /* m_clear */
    nullptr  /* m_free */
};
#endif
#define RETVAL nullptr

PyObject *PY_init_abispack_abispack(void)
{
    PyObject *m;
#if PY_MAJOR_VERSION >= 3
    m = PyModule_Create(&moduledef);
#else
    m = Py_InitModule3((char *) "abispack", PY_methods, nullptr);
#endif
    if (m == nullptr)
        return nullptr;


    // Libabigail
    PY_Libabigail_Type.tp_new   = PyType_GenericNew;
    PY_Libabigail_Type.tp_alloc = PyType_GenericAlloc;
    if (PyType_Ready(&PY_Libabigail_Type) < 0)
        return RETVAL;
    Py_INCREF(&PY_Libabigail_Type);
    PyModule_AddObject(m, "Libabigail", (PyObject *)&PY_Libabigail_Type);

    return m;
}

